{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pollo\\\\Desktop\\\\giggi\\\\src\\\\components\\\\SearchWork.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport Job from './Job';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WorkSearch = () => {\n  _s();\n\n  const [works, setWork] = useState([]);\n  const params = useParams();\n  const url = 'https://strive-benchmark.herokuapp.com/api/jobs?company=';\n  useEffect(() => {\n    getWork();\n  }, []);\n\n  const getWork = async () => {\n    try {\n      const response = await fetch(url + params.companyName);\n\n      if (response.ok) {\n        const {\n          data\n        } = await response.json();\n        setWork(data);\n      } else {\n        alert('errore');\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: works.map(jobData => /*#__PURE__*/_jsxDEV(Job, {\n          data: jobData\n        }, jobData._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(WorkSearch, \"xQI5f5R4NlcBWMnHqDIuSLSu+94=\", false, function () {\n  return [useParams];\n});\n\n_c = WorkSearch;\nexport default WorkSearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"WorkSearch\");","map":{"version":3,"names":["useEffect","useState","Container","Row","Col","Job","useParams","WorkSearch","works","setWork","params","url","getWork","response","fetch","companyName","ok","data","json","alert","error","console","log","map","jobData","_id"],"sources":["C:/Users/pollo/Desktop/giggi/src/components/SearchWork.jsx"],"sourcesContent":["import { useEffect, useState } from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport Job from './Job'\nimport { useParams } from 'react-router-dom'\n\nconst WorkSearch = () => {\n  const [works, setWork] = useState([])\n  const params = useParams()\n\n  const url =\n    'https://strive-benchmark.herokuapp.com/api/jobs?company='\n\n  useEffect(() => {\n    getWork()\n  }, [])\n\n  const getWork = async () => {\n    try {\n      const response = await fetch(url + params.companyName)\n      if (response.ok) {\n        const {data} = await response.json()\n        setWork(data)\n      } else {\n        alert('errore')\n      }\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  return (\n    <Container>\n      <Row>\n        <Col>\n          {works.map((jobData) => (\n            <Job key={jobData._id} data={jobData} />\n          ))}\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default WorkSearch\n"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,QAAoC,iBAApC;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAASC,SAAT,QAA0B,kBAA1B;;;AAEA,MAAMC,UAAU,GAAG,MAAM;EAAA;;EACvB,MAAM,CAACC,KAAD,EAAQC,OAAR,IAAmBR,QAAQ,CAAC,EAAD,CAAjC;EACA,MAAMS,MAAM,GAAGJ,SAAS,EAAxB;EAEA,MAAMK,GAAG,GACP,0DADF;EAGAX,SAAS,CAAC,MAAM;IACdY,OAAO;EACR,CAFQ,EAEN,EAFM,CAAT;;EAIA,MAAMA,OAAO,GAAG,YAAY;IAC1B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,GAAG,GAAGD,MAAM,CAACK,WAAd,CAA5B;;MACA,IAAIF,QAAQ,CAACG,EAAb,EAAiB;QACf,MAAM;UAACC;QAAD,IAAS,MAAMJ,QAAQ,CAACK,IAAT,EAArB;QACAT,OAAO,CAACQ,IAAD,CAAP;MACD,CAHD,MAGO;QACLE,KAAK,CAAC,QAAD,CAAL;MACD;IACF,CARD,CAQE,OAAOC,KAAP,EAAc;MACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ;IACD;EACF,CAZD;;EAcA,oBACE,QAAC,SAAD;IAAA,uBACE,QAAC,GAAD;MAAA,uBACE,QAAC,GAAD;QAAA,UACGZ,KAAK,CAACe,GAAN,CAAWC,OAAD,iBACT,QAAC,GAAD;UAAuB,IAAI,EAAEA;QAA7B,GAAUA,OAAO,CAACC,GAAlB;UAAA;UAAA;UAAA;QAAA,QADD;MADH;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAWD,CApCD;;GAAMlB,U;UAEWD,S;;;KAFXC,U;AAsCN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}